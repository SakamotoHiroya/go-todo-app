// Code generated by ogen, DO NOT EDIT.

package ogen

import (
	"fmt"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// Ref: #/components/schemas/Error
type Error struct {
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val OptString) {
	s.Message = val
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

type JwtAuth struct {
	Token string
	Roles []string
}

// GetToken returns the value of Token.
func (s *JwtAuth) GetToken() string {
	return s.Token
}

// GetRoles returns the value of Roles.
func (s *JwtAuth) GetRoles() []string {
	return s.Roles
}

// SetToken sets the value of Token.
func (s *JwtAuth) SetToken(val string) {
	s.Token = val
}

// SetRoles sets the value of Roles.
func (s *JwtAuth) SetRoles(val []string) {
	s.Roles = val
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/Task
type Task struct {
	ID     OptString `json:"id"`
	Title  OptString `json:"title"`
	Status OptString `json:"status"`
}

// GetID returns the value of ID.
func (s *Task) GetID() OptString {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *Task) GetTitle() OptString {
	return s.Title
}

// GetStatus returns the value of Status.
func (s *Task) GetStatus() OptString {
	return s.Status
}

// SetID sets the value of ID.
func (s *Task) SetID(val OptString) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *Task) SetTitle(val OptString) {
	s.Title = val
}

// SetStatus sets the value of Status.
func (s *Task) SetStatus(val OptString) {
	s.Status = val
}

// Ref: #/components/schemas/TaskGroup
type TaskGroup struct {
	ID   OptString `json:"id"`
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *TaskGroup) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *TaskGroup) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *TaskGroup) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *TaskGroup) SetName(val OptString) {
	s.Name = val
}

// Ref: #/components/schemas/TaskGroupDetail
type TaskGroupDetail struct {
	ID      OptString `json:"id"`
	Name    OptString `json:"name"`
	Members []User    `json:"members"`
}

// GetID returns the value of ID.
func (s *TaskGroupDetail) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *TaskGroupDetail) GetName() OptString {
	return s.Name
}

// GetMembers returns the value of Members.
func (s *TaskGroupDetail) GetMembers() []User {
	return s.Members
}

// SetID sets the value of ID.
func (s *TaskGroupDetail) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *TaskGroupDetail) SetName(val OptString) {
	s.Name = val
}

// SetMembers sets the value of Members.
func (s *TaskGroupDetail) SetMembers(val []User) {
	s.Members = val
}

// TaskGroupsGroupIdDeleteNoContent is response for TaskGroupsGroupIdDelete operation.
type TaskGroupsGroupIdDeleteNoContent struct{}

// TaskGroupsGroupIdUsersUserIdDeleteNoContent is response for TaskGroupsGroupIdUsersUserIdDelete operation.
type TaskGroupsGroupIdUsersUserIdDeleteNoContent struct{}

// TasksTaskIdDeleteNoContent is response for TasksTaskIdDelete operation.
type TasksTaskIdDeleteNoContent struct{}

// Ref: #/components/schemas/Token
type Token struct {
	Token OptString `json:"token"`
}

// GetToken returns the value of Token.
func (s *Token) GetToken() OptString {
	return s.Token
}

// SetToken sets the value of Token.
func (s *Token) SetToken(val OptString) {
	s.Token = val
}

// Ref: #/components/schemas/User
type User struct {
	ID       OptString `json:"id"`
	Username OptString `json:"username"`
}

// GetID returns the value of ID.
func (s *User) GetID() OptString {
	return s.ID
}

// GetUsername returns the value of Username.
func (s *User) GetUsername() OptString {
	return s.Username
}

// SetID sets the value of ID.
func (s *User) SetID(val OptString) {
	s.ID = val
}

// SetUsername sets the value of Username.
func (s *User) SetUsername(val OptString) {
	s.Username = val
}

// UsersUserIdDeleteNoContent is response for UsersUserIdDelete operation.
type UsersUserIdDeleteNoContent struct{}
